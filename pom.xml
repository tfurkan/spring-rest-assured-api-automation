<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>backend-test-framework</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>backend-test-framework</name>
	<description>backend-test-framework</description>
	<properties>
		<java.version>17</java.version>
		<groovy.version>4.0.8</groovy.version>
		<rest-assured.version>5.3.0</rest-assured.version>
		<cucumber-java.version>7.10.1</cucumber-java.version>
		<cucumber-spring.version>7.10.1</cucumber-spring.version>
		<cucumber-testng.version>7.10.1</cucumber-testng.version>
		<selenium-java.version>4.7.2</selenium-java.version>
		<lombok.version>1.18.24</lombok.version>
		<webdrivermanager.version>5.3.1</webdrivermanager.version>
		<spring-data-jpa.version>3.0.1</spring-data-jpa.version>
		<spring-boot-starter-data-jpa.version>3.0.2</spring-boot-starter-data-jpa.version>
		<spring-boot-starter-data-mongodb.version>3.0.2</spring-boot-starter-data-mongodb.version>
		<mssql-jdbc.version>9.2.0.jre15</mssql-jdbc.version>
		<postgresql.version>42.5.1</postgresql.version>
		<testng.version>7.7.0</testng.version>
		<jackson-databind.version>2.14.1</jackson-databind.version>
		<jackson-core.version>2.14.1</jackson-core.version>
		<jackson-annotations.version>2.14.1</jackson-annotations.version>
		<jackson-dataformat-yaml.version>2.14.1</jackson-dataformat-yaml.version>
		<jackson-datatype-jsr310.version>2.14.1</jackson-datatype-jsr310.version>
		<jackson-dataformat-xml.version>2.14.1</jackson-dataformat-xml.version>
		<javafaker.version>1.0.2</javafaker.version>
		<wiremock-jre8.version>2.27.2</wiremock-jre8.version>
		<wiremock.version>2.27.2</wiremock.version>
		<android-json.version>0.0.20131108.vaadin1</android-json.version>
		<guava.version>31.1-jre</guava.version>
		<gson.version>2.8.9</gson.version>
		<commons-codec.version>1.15</commons-codec.version>
		<maven-cucumber-reporting.version>5.7.4</maven-cucumber-reporting.version>
		<spring-mock-mvc.version>5.3.0</spring-mock-mvc.version>
	</properties>
	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<scope>test</scope>
			<version>${selenium-java.version}</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-devtools-v108</artifactId>
			<version>${selenium-java.version}</version>
		</dependency>

		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>${webdrivermanager.version}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber-java.version}</version>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>${cucumber-spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-databind.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-annotations.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>${jackson-dataformat-yaml.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson-datatype-jsr310.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>${jackson-dataformat-xml.version}</version>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-testng</artifactId>
			<version>${cucumber-testng.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.javafaker</groupId>
			<artifactId>javafaker</artifactId>
			<version>${javafaker.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-jre8</artifactId>
			<version>${wiremock-jre8.version}</version>
		</dependency>

		<dependency>
			<groupId>com.vaadin.external.google</groupId>
			<artifactId>android-json</artifactId>
			<version>${android-json.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<version>${wiremock.version}</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>


		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>

		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.0.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>7.11.1</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<version>${spring-mock-mvc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
		</dependency>

		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-standalone</artifactId>
			<version>3.0.0-beta-2</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${project.parent.version}</version>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>testng.xml</suiteXmlFile>
					</suiteXmlFiles>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<version>${maven-cucumber-reporting.version}</version>
				<executions>
					<execution>
						<id>execution</id>
						<phase>verify</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<projectName>cucumber-jvm-example</projectName>
							<!-- optional, per documentation set this to "true" to bypass generation of Cucumber Reports entirely, defaults to false if not specified -->
							<skip>false</skip>
							<!-- output directory for the generated report -->
							<outputDirectory>${project.build.directory}</outputDirectory>
							<!-- optional, defaults to outputDirectory if not specified -->
							<inputDirectory>${project.build.directory}/jsonReports</inputDirectory>
							<jsonFiles>
								<!-- supports wildcard or name pattern -->
								<param>**/*.json</param>
							</jsonFiles>
							<!-- optional, defaults to outputDirectory if not specified -->
							<classificationDirectory>${project.build.directory}</classificationDirectory>
							<classificationFiles>
								<!-- supports wildcard or name pattern -->
								<param>sample.properties</param>
								<param>other.properties</param>
							</classificationFiles>
							<!-- optional, set true to group features by its Ids -->
							<mergeFeaturesById>false</mergeFeaturesById>
							<!-- optional, set true to get a final report with latest results of the same test from different test runs -->
							<mergeFeaturesWithRetest>false</mergeFeaturesWithRetest>
							<!-- optional, set true to fail build on test failures -->
							<checkBuildResult>false</checkBuildResult>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
